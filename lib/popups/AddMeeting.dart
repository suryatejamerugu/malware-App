import 'dart:collection';

import 'package:flutter/material.dart';
import 'package:firebase_database/firebase_database.dart';
import 'package:firebase_auth/firebase_auth.dart';

class AddMeeting extends StatefulWidget {
  final List<dynamic> teamNames;
  final List<dynamic> dayIndexs;
  const AddMeeting({Key key, this.teamNames, this.dayIndexs}) : super(key: key);
  @override
  _AddMeetingState createState() => _AddMeetingState();
}

class _AddMeetingState extends State<AddMeeting> {
  TimeOfDay _fomTime = TimeOfDay.fromDateTime(DateTime.now());
  TimeOfDay _startTime = TimeOfDay(hour: 00, minute: 00);
  TimeOfDay _endTime = TimeOfDay(hour: 00, minute: 00);
  final ref = FirebaseDatabase.instance.reference();
  final auth = FirebaseAuth.instance;
  var daySelected;
  var teamSelected;

  @override
  void initState() {
    // TODO: implement initState
    super.initState();
    teamSelected = widget.teamNames[0];
    daySelected = "0";
  }


  @override
  Widget build(BuildContext context) {
    print("dailog");
    return Dialog(
      shape: RoundedRectangleBorder(
        borderRadius: BorderRadius.circular(10),
      ),
      backgroundColor: Colors.transparent,
      child: Container(
        height: 270,
        decoration: BoxDecoration(
          color: Colors.white,
          borderRadius: BorderRadius.circular(10),
        ),
        child: Column(
          children: [
            Padding(
                padding: EdgeInsets.only(top: 8),
                child: Text(
                  "Add Meeting Details",
                  style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
                )),
            Divider(),
            Column(mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              children: [
              DropdownButton(
                  value: daySelected,
                  elevation: 16,
                  style: TextStyle(color: Colors.deepPurpleAccent[100]),
                  underline: Container(
                    height: 2,
                    color: Colors.deepPurpleAccent,
                  ),
                  items: widget.dayIndexs.map((dynamic e) {
                    return DropdownMenuItem(
                      child: Text(e),
                      value: e,
                    );
                  }).toList(),
                  onChanged: (value) {
                    setState(() {
                      daySelected = value;
                    });
                  }),
              DropdownButton(
                  value: teamSelected,
                  elevation: 16,
                  style: TextStyle(color: Colors.deepPurpleAccent[100]),
                  underline: Container(
                    height: 2,
                    color: Colors.deepPurpleAccent,
                  ),
                  items: widget.teamNames.map((dynamic e) {
                    return DropdownMenuItem(
                      child: Text(e),
                      value: e,
                    );
                  }).toList(),
                  onChanged: (value) {
                    setState(() {
                      teamSelected = value;
                    });
                  }),
            ],),
            Padding(
              padding: const EdgeInsets.only(top: 20,),
              child: Row(
                mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                children: [
                  RaisedButton(
                    onPressed: () {
                      _showTimePicker(context,0);
                    },
                    color: Colors.deepPurpleAccent[100],
                    child: Text(_startTime.hour.toString() +
                        ":" +
                        _startTime.minute.toString()),
                  ),
                  Text("to"),
                  RaisedButton(
                    onPressed: () {
                      _showTimePicker(context,1);
                    },
                    color: Colors.deepPurpleAccent[100],
                    child: Text(_endTime.hour.toString() +
                        ":" +
                        _endTime.minute.toString()),
                  )
                ],
              ),
            ),

            RaisedButton(onPressed: (){

              ref.child("users").child(auth.currentUser.uid).child("shedule").child(daySelected).once().then((value){
                var data = value.value;
                print("--------add metting------"+daySelected);
                print(data);
                if(value.value == null) ref.child("users").child(auth.currentUser.uid).child("shedule").child(daySelected).child("0").set({
                  "tname" : teamSelected,
                  "start_time" : _startTime.hour.toString()+ ":"+ _startTime.minute.toString(),
                  "end_time" : _endTime.hour.toString() + ":" + _endTime.minute.toString(),
                }).then((value){
                  setState(() {
                    Navigator.pop(context);
                  });
                });
                else {
                  ref.child("users").child(auth.currentUser.uid).child("shedule").child(daySelected).child(data.length.toString()).set({
                    "tname" : teamSelected,
                    "start_time" : _startTime.hour.toString()+ ":"+ _startTime.minute.toString(),
                    "end_time" : _endTime.hour.toString() + ":" + _endTime.minute.toString(),
                  }).then((value){
                    setState(() {
                      Navigator.pop(context);
                    });
                  });
                }});
            },
              color: Colors.deepPurpleAccent[100],
            child: Text("Shedule Meeting"),)
          ],
        ),
      ),
    );
  }

  Future<void> _showTimePicker(BuildContext context, int i) async {
    final picked =
        await showTimePicker(context: context, initialTime: _fomTime);
    if (picked != null) {
      setState(() {
        if(i == 0) _startTime = picked;
        else _endTime = picked;

      });
    }
  }
}
